EJS - embedded javascript

When quickly creating Node applications, a fast way to template your application is sometimes necessary.

Jade comes as the default template engine for Express but Jade syntax can be overly complex for many use cases.

Embedded JavaScript templates (EJS) can be used as an alternative template engine.


At this point, you can initialize a new npm project:

    npm init -y

Next, you will need to install the express package:

    npm install express@4.17.1

Then install the ejs package:

    npm install ejs@3.1.6




main code for running ejs

connect and set and render

// set the view engine to ejs
app.set('view engine', 'ejs');
  					 we must have views folder in our directories we have placed our ejs files and all our partials

// use res.render to load up an ejs view file

// index page
app.get('/', function(req, res) {
  res.render('pages/index');
});				


				Notice how the code sends a view to the user by using res.render(). It is important to note that res.render() will look in a views folder for the view. So you only have to define pages/index since the full path is views/pages/index.

// about page
app.get('/about', function(req, res) {
  res.render('pages/about');
});














now how to write ejs

<script src="ejs.js"></script>
<script>
  let people = ['geddy', 'neil', 'alex'];
  let html = ejs.render('<%= people.join(", "); %>', {people: people});
</script>






for using if statement
<% if (user) { %>
  <h2><%= user.name %></h2>
<% } %>









uasasge

let template = ejs.compile(str, options);
template(data);
// => Rendered HTML string

ejs.render(str, data, options);
// => Rendered HTML string

ejs.renderFile(filename, data, options, function(err, str){
    // str => Rendered HTML string
});





Tags


    <% 'Scriptlet' tag, for control-flow, no output
    <%_ ‘Whitespace Slurping’ Scriptlet tag, strips all whitespace before it

    <%= Outputs the value/variable values into the template (HTML escaped)


    <%- Outputs the unescaped value into the template
    <%# Comment tag, no execution, no output
    <%% Outputs a literal '<%'
    %> Plain ending tag
    -%> Trim-mode ('newline slurp') tag, trims following newline
    _%> ‘Whitespace Slurping’ ending tag, removes all whitespace after it




includes
<ul>
  <% users.forEach(function(user){ %>
    <%- include('user/show', {user: user}); %>
  <% }); %>
</ul>








